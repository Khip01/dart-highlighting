<span class="hljs-keyword">let</span> foo = <span class="hljs-literal">true</span>;
`hello ${foo ? `Mr ${name}` : &#x27;there&#x27;}`;
foo = <span class="hljs-literal">false</span>;

html`&lt;div id=&quot;foo&quot;&gt;Hello world&lt;/div&gt;`;

html`&lt;div id=&quot;foo&quot;&gt;Hello times ${10} &lt;span id=&quot;bar&quot;&gt;world&lt;/span&gt;&lt;/div&gt;`;

html`
  &lt;ul id=&quot;list&quot;&gt;
    ${repeat([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], (v) =&gt; {
      <span class="hljs-keyword">return</span> html`&lt;li <span class="hljs-keyword">class</span>=&quot;item&quot;&gt;${v}&lt;/li&gt;`;
    }}
  &lt;/ul&gt;
`;

css`
  body {
    color: red;
  }
`;

gql`query { viewer { id } }`;

gql`
  <span class="hljs-keyword">type</span> Project {
    name: <span class="hljs-built_in">String</span>
    tagline: <span class="hljs-built_in">String</span>
    contributors: [User]
  }
`;

// Ensure that we&#x27;re back <span class="hljs-keyword">in</span> TypeScript mode.
<span class="hljs-keyword">var</span> foo = 10;
