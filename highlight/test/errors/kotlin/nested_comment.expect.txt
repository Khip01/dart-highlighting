<span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">a</span><span class="hljs-params">()</span> = 1</span>
<span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-comment">/* b1 */</span> <span class="hljs-title">b</span><span class="hljs-params">(<span class="hljs-comment">/*b2*/</span> a : <span class="hljs-type">Int</span> <span class="hljs-comment">/*b3*/</span>)</span> <span class="hljs-comment">/*b4*/</span> = a // b5</span>


<span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;T&gt;</span> <span class="hljs-title">c</span><span class="hljs-params">()</span> : String = &quot;1&quot;</span>
<span class="hljs-keyword">inline</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;<span class="hljs-keyword">reified</span> T&gt;</span> <span class="hljs-title">d</span><span class="hljs-params">()</span> { return }</span>


<span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">e</span><span class="hljs-params">(
    a : <span class="hljs-type">Int</span>,</span> <span class="hljs-comment">/*a*/</span></span>
    b : String <span class="hljs-comment">//b</span>
)
{}


<span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-type">&lt;OUT&gt;</span> <span class="hljs-title">handle</span><span class="hljs-params">(lambda: (<span class="hljs-type">IN</span>) <span class="hljs-comment">/* parenthesized type */</span> -&gt; <span class="hljs-type">OUT</span>)</span> {}</span>
